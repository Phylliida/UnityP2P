<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.Advertisements</name>
    </assembly>
    <member name="T:UnityEngine.Advertisements.Advertisement">
      <summary>
        <para>Unity Ads.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.debugLevel">
      <summary>
        <para>Controls the amount of logging output from the advertisement system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.debugMode">
      <summary>
        <para>Controls the amount of logging output from the advertisement system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.gameId">
      <summary>
        <para>Returns the game identifier for the current platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.isInitialized">
      <summary>
        <para>Returns whether the advertisement system is initialized successfully.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.isShowing">
      <summary>
        <para>Returns whether an advertisement is currently being shown.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.isSupported">
      <summary>
        <para>Returns if the current platform is supported by the advertisement system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.testMode">
      <summary>
        <para>Returns whether the testing mode is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.Advertisement.version">
      <summary>
        <para>Returns the current Unity Ads version.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Advertisements.Advertisement.DebugLevel">
      <summary>
        <para>Player debug message level.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.Advertisement.DebugLevel.Debug">
      <summary>
        <para>Prints all debugging messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.Advertisement.DebugLevel.Error">
      <summary>
        <para>Prints all error messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.Advertisement.DebugLevel.Info">
      <summary>
        <para>Prints all informational messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.Advertisement.DebugLevel.None">
      <summary>
        <para>Prints out no debugging output.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.Advertisement.DebugLevel.Warning">
      <summary>
        <para>Prints out warnings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.GetPlacementState">
      <summary>
        <para>Returns the placement state.</para>
      </summary>
      <param name="placementId">Placement identifier.</param>
      <returns>
        <para>Placement state.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.GetPlacementState(System.String)">
      <summary>
        <para>Returns the placement state.</para>
      </summary>
      <param name="placementId">Placement identifier.</param>
      <returns>
        <para>Placement state.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Initialize(System.String)">
      <summary>
        <para>Manually initializes the advertisement system. Normally this is done from editor, and you should only call this method if you are using UnityAds with automatic initialization disabled.</para>
      </summary>
      <param name="gameId">Your game id. You can see a list of your registered games at the UnityAds admin site.</param>
      <param name="testMode">In test mode, you will see test advertisement. Can be overruled by settings in the admin site for game.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Initialize(System.String,System.Boolean)">
      <summary>
        <para>Manually initializes the advertisement system. Normally this is done from editor, and you should only call this method if you are using UnityAds with automatic initialization disabled.</para>
      </summary>
      <param name="gameId">Your game id. You can see a list of your registered games at the UnityAds admin site.</param>
      <param name="testMode">In test mode, you will see test advertisement. Can be overruled by settings in the admin site for game.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.IsReady">
      <summary>
        <para>Returns whether an advertisement is ready to be shown. Placements are configured per game in the UnityAds admin site, where you can also set your default placement.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in UnityAds server-side admin settings will be used.</param>
      <returns>
        <para>If the placement is ready.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.IsReady(System.String)">
      <summary>
        <para>Returns whether an advertisement is ready to be shown. Placements are configured per game in the UnityAds admin site, where you can also set your default placement.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in UnityAds server-side admin settings will be used.</param>
      <returns>
        <para>If the placement is ready.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.SetMetaData(UnityEngine.Advertisements.MetaData)">
      <summary>
        <para>Sets various metadata for Unity Ads.</para>
      </summary>
      <param name="metaData">MetaData to be set.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Show">
      <summary>
        <para>Show an advertisement in your project.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in the admin settings will be used.</param>
      <param name="showOptions">Specify e.g. callback handler to be called when video has finished.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Show(UnityEngine.Advertisements.ShowOptions)">
      <summary>
        <para>Show an advertisement in your project.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in the admin settings will be used.</param>
      <param name="showOptions">Specify e.g. callback handler to be called when video has finished.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Show(System.String)">
      <summary>
        <para>Show an advertisement in your project.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in the admin settings will be used.</param>
      <param name="showOptions">Specify e.g. callback handler to be called when video has finished.</param>
    </member>
    <member name="M:UnityEngine.Advertisements.Advertisement.Show(System.String,UnityEngine.Advertisements.ShowOptions)">
      <summary>
        <para>Show an advertisement in your project.</para>
      </summary>
      <param name="placementId">Optional placement identifier. If not specified, your default placement specified in the admin settings will be used.</param>
      <param name="showOptions">Specify e.g. callback handler to be called when video has finished.</param>
    </member>
    <member name="T:UnityEngine.Advertisements.MetaData">
      <summary>
        <para>Class for sending various metadata to UnityAds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.MetaData.category">
      <summary>
        <para>Metadata category.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Advertisements.MetaData.Get(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="key">Metadata key.</param>
      <returns>
        <para>Stored metadata.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Advertisements.MetaData.Set(System.String,System.Object)">
      <summary>
        <para>Sets new metadata fields.</para>
      </summary>
      <param name="key">Metadata key.</param>
      <param name="value">Metadata value, needs to be JSON serializable.</param>
    </member>
    <member name="P:UnityEngine.Advertisements.MetaData.Values">
      <summary>
        <para></para>
      </summary>
      <returns>
        <para>Stored metadata dictionary.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Advertisements.PlacementState">
      <summary>
        <para>Various states that Unity Ads placements can be in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.PlacementState.Disabled">
      <summary>
        <para>Placement has been disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.PlacementState.NoFill">
      <summary>
        <para>Placement has no advertisements to show.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.PlacementState.NotAvailable">
      <summary>
        <para>Placement is not available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.PlacementState.Ready">
      <summary>
        <para>Placement is ready to be shown an advertisement from.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.PlacementState.Waiting">
      <summary>
        <para>Placement is waiting to be ready.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Advertisements.ShowOptions">
      <summary>
        <para>Collection of options that can be passed to Advertisements.Show to modify advertisement behaviour.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.ShowOptions.gamerSid">
      <summary>
        <para>Add a string to specify an identifier for a specific user in the game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Advertisements.ShowOptions.resultCallback">
      <summary>
        <para>Callback to recieve the result of the advertisement.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Advertisements.ShowResult">
      <summary>
        <para>ShowResult is passed to ShowOptions.resultCallback after the advertisement has completed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.ShowResult.Failed">
      <summary>
        <para>Indicates that the advertisement failed to complete.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.ShowResult.Finished">
      <summary>
        <para>Indicates that the advertisement completed successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Advertisements.ShowResult.Skipped">
      <summary>
        <para>Indicates that the advertisement was skipped.</para>
      </summary>
    </member>
  </members>
</doc>
